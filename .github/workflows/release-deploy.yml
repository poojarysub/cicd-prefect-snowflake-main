name: Deploy SQL to Snowflake

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: cicd-sql-release

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt

      - name: Print working directory
        run: pwd

      - name: List all files
        run: ls -R

      - name: Get Latest Release Tag
        id: get_release
        run: |
          echo "RELEASE_TAG=$(curl -s -H "Authorization: token ${{ secrets.HUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      - name: Extract SQL Paths from Latest Release Notes
        id: extract_sql
        run: |
          curl -s -H "Authorization: token ${{ secrets.HUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | jq -r '.body' \
            | grep -Po '[^\s\|]*\.sql' \
            | sed -e 's/|//g' -e 's/\r//g' \
            | sort | uniq \
            > sorted_sql.txt
        
          echo "ðŸ“„ Extracted SQL files:"
          cat sorted_sql.txt
        
      - name: Run Prefect Flow
        run: python flows/main_flow.py --release-notes sorted_sql.txt
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}